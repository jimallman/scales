// track screen dimensions
let scene,camera,renderer,masterGroup,keyboardGroup,carouselRadius,dataLength,categorySet,noteRadius,raycaster,audioCtx,width=window.innerWidth,height=window.innerHeight,highlights=[],activeHighlight=null,panels=[],activePanel=null,mouse=new THREE.Vector2,pitchshift=0,scaleshift=0,noteLabelType="flat",noteLabels={sharp:["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"],flat:["C","Db","D","Eb","E","F","Gb","G","Ab","A","Bb","B"],elements:[]},pageElements={name:null,category:null,description:null// colors
},green="#00e19e",gold="#ffd830",grey="#666666",tweens=new Set([]),carouselRot={amount:0},flagUpdate=!0,audioBuffers=[];init(),loadAudio(),loadData("./scales.json",a=>{visualize(a).then(()=>{console.log(scene)})}),initDocument();function initDocument(){window.addEventListener("resize",resize,!1),window.addEventListener("mousemove",onMouseMove,!1),window.addEventListener("mousedown",onMouseDown),document.onkeydown=a=>{a=a||window.event,"37"==a.keyCode?rotateCarousel("left"):"39"==a.keyCode&&rotateCarousel("right")},document.getElementById("flat").onclick=()=>{"flat"!=noteLabelType&&(noteLabelType="flat",createLabels(carouselRadius,pitchshift))},document.getElementById("sharp").onclick=()=>{"sharp"!=noteLabelType&&(noteLabelType="sharp",createLabels(carouselRadius,pitchshift))},document.getElementById("increase-root").onclick=()=>{changePitch(1)},document.getElementById("decrease-root").onclick=()=>{changePitch(-1)},document.getElementById("name").style.color=green}function init(){scene=new THREE.Scene,scene.background=new THREE.Color(2041391);const a=window.devicePixelRatio?window.devicePixelRatio:1;renderer=new THREE.WebGLRenderer({antialias:!0,alpha:!0}),renderer.setPixelRatio(a),renderer.setSize(width,height),document.getElementById("canvas").appendChild(renderer.domElement);new THREE.Clock;// @TODO: make the radius responsive to the number of scales in the data
carouselRadius=70;let b=width/height;camera=new THREE.PerspectiveCamera(60,b,1,carouselRadius/2),camera.position.set(0,0,1.2*carouselRadius),camera.updateMatrixWorld(),raycaster=new THREE.Raycaster,AudioContext=window.AudioContext||window.webkitAudioContext,audioCtx=new AudioContext,masterGroup=new THREE.Group}function loadData(a,b){let c=new XMLHttpRequest;c.open("GET",a),c.onload=()=>{let a=JSON.parse(c.response);dataLength=a.length,scene.userData.data=a,b(a)},c.send()}function loadAudio(){for(let a=0;23>a;a++){let b=`./audio/${a+1}.mp3`,c=new XMLHttpRequest;c.open("GET",b,!0),c.responseType="arraybuffer",c.onload=()=>{audioCtx.decodeAudioData(c.response,function(b){audioBuffers[a]=b},a=>{console.error(a)})},c.send()}}function animate(a){window.requestAnimationFrame(animate),render(a)}function render(a){tweens.forEach(b=>{b.update(a)}),masterGroup.rotation.y=carouselRot.amount,raycaster.setFromCamera(mouse,camera);// note interactivity
let b=raycaster.intersectObjects(highlights);if(0<b.length){let a=b[0].object;activeHighlight!=a&&(activeHighlight=a,playNote(a,pitchshift)),activeHighlight=a}else activeHighlight&&(activeHighlight.material.opacity=0,activeHighlight=null);// panel interactivity
let c=raycaster.intersectObjects(panels);if(0<c.length){let a=c[0].object;activePanel!=a&&(activePanel=a),activePanel=a,a.material.opacity=.1}else activePanel&&(activePanel.material.opacity=0,activePanel=null);renderer.render(scene,camera)}function visualize(a){var b=Math.PI;return new Promise((c,d)=>{try{let d=.7,e=4;noteRadius=e,createLabels(e,pitchshift);let f=[];// cycle through all scales in 'data'
for(let c=0;c<a.length;c++){let g=new THREE.Group,h=[],i=a[c].intervals;// cycle through all notes in an octave (1-12) and mark
// whether or not (T/F) they are in the scale
for(let a=0;a<i.length;a++){0==a&&h.push(!0);// push intervals[j] - 1 false entries
for(let b=0;b<i[a]-1;b++)h.push(!1);// add a true for the next note in the scale
h.push(!0)}// the final interval duplicates the root note; remove it
h.pop(),createRings(h,g,d,e,.05),createPaths(i,g,d,e);// find coordinates for scaleGroup according to its index
let j=new THREE.Spherical(carouselRadius,-b/2,b+c*(2*b/a.length)),k=new THREE.Vector3().setFromSpherical(j);// rotate it to its position on the carousel
// add user data
// add to master group
g.rotateY(2*b*(c/a.length)),g.position.copy(k),g.userData.notes=h,g.userData.index=c,g.userData.name=a[c].name,g.userData.category=a[c].category,f.push(a[c].category),masterGroup.add(g)}// create navigation panels
// update the note labels
// set up initial keyboard display
// find unique categories and update the categoryCount
createPanels(e),updateLabels(masterGroup.children[scaleshift].userData.notes,!1),displayKeyboard(),categorySet=new Set(f),scene.add(masterGroup),c()}catch(a){d(a)}})}function createRings(a,b,c,d,e){for(let f=0;f<a.length;f++){let g=new THREE.RingBufferGeometry(c*(1-e),c,64),h=new THREE.MeshBasicMaterial({color:new THREE.Color(grey),transparent:!0,opacity:1,wireframe:!1}),i=new THREE.Mesh(g,h);if(i.rotateZ(getRotation(f)),i.translateY(d),a[f]){h.color=0==f?new THREE.Color(gold):new THREE.Color(green);// add a highlight that will be triggered by mousover
let a=new THREE.CircleBufferGeometry(c*(1-e),64),d=new THREE.MeshBasicMaterial({color:new THREE.Color(16777215),transparent:!0,opacity:0,wireframe:!1}),g=new THREE.Mesh(a,d);g.position.copy(i.position),g.userData.note=f,g.userData.ring=i;// add a highlight that will be visible and move with the ring
let j=g.clone();j.material=d.clone(),j.material.opacity=.05;let k=new THREE.Group;k.add(i,j),highlights.push(g),b.add(g),b.add(k)}else b.add(i)}}function changePitch(a){if(0>pitchshift+a?0:11<pitchshift+a?11:pitchshift+=a,1>=pitchshift||10<=pitchshift)switch(pitchshift){case 0:document.getElementById("decrease-root").style.color="#ffffff";break;case 1:document.getElementById("decrease-root").style.color="#ff4c7a";break;case 11:document.getElementById("increase-root").style.color="#ffffff";break;case 10:document.getElementById("increase-root").style.color="#ff4c7a";break;default:}createLabels(carouselRadius,pitchshift),displayKeyboard()}function createLabels(a,b){for(let c=0+b;c<12+b;c++)// no need to recreate note labels entirely each time this is called
if(12!=noteLabels.elements.length){let d=new THREE.Mesh;d.rotateZ(getRotation(c-b)),d.translateY(a),d.translateZ(carouselRadius);let e=screenPosition(d,camera),f=document.createElement("div");f.innerHTML=noteLabels[noteLabelType][c%12],f.style.position="absolute",f.classList.add("note"),document.body.appendChild(f),f.style.left=e.x-f.clientWidth/2+"px",f.style.top=e.y-f.clientHeight/2+"px",noteLabels.elements.push(f)}else{let a=noteLabels.elements[c-b],d={width:a.clientWidth,height:a.clientHeight,left:parseFloat(a.style.left.slice(0,-2)),top:parseFloat(a.style.top.slice(0,-2))};a.innerHTML=noteLabels[noteLabelType][c%12],a.style.left=d.left+(d.width-a.clientWidth)/2+"px",a.style.top=d.top+(d.height-a.clientHeight)/2+"px"}"sharp"==noteLabelType?(document.getElementById("sharp").style.textDecoration="underline",document.getElementById("flat").style.textDecoration="none"):"flat"==noteLabelType&&(document.getElementById("flat").style.textDecoration="underline",document.getElementById("sharp").style.textDecoration="none")}function updateLabels(a,b){let c=b?300:0;// timeout allows the carousel to move before updating labels
window.setTimeout(()=>{// update the title, category, and description
let b=masterGroup.children[scaleshift].userData,c=b.notes.filter(a=>!0==a).length;document.getElementById("name").innerText=b.name+` (${c})`,document.getElementById("category").innerText=b.category,document.getElementById("category").style.color="#ff4c7a";for(let b=0;b<noteLabels.elements.length;b++)noteLabels.elements[b].style.color=a[b]?// set notes in scale to white
"#FFFFFF":// set notes outside of scale to grey
"#444444";let d=Array.from(document.getElementsByClassName("interval-label"));// clear out old interval labels
for(let a=0;a<d.length;a++)d[a].remove();// add new interval labels
for(let a=0;a<b.intervals.length;a++){let c=screenPosition(b.intervals[a].mesh,camera),d=document.createElement("div");d.classList.add(`interval-label`),d.style.position="absolute",d.innerText=b.intervals[a].interval,document.body.appendChild(d),d.style.left=c.x-d.clientWidth/2+"px",d.style.top=c.y-d.clientHeight/2+"px"}},c)}function updateLabelPositions(){// update each note label
for(let a,b=0;12>b;b++){a=new THREE.Mesh,a.rotateZ(getRotation(b)),a.translateY(noteRadius),a.translateZ(carouselRadius);let c=screenPosition(a,camera),d=noteLabels.elements[b];d.style.left=c.x-d.clientWidth/2+"px",d.style.top=c.y-d.clientHeight/2+"px"}// update each interval label
let a=masterGroup.children[scaleshift].userData.intervals,b=Array.from(document.getElementsByClassName("interval-label"));for(let c=0;c<a.length;c++){let d=a[c].mesh,e=b[c],f=screenPosition(d,camera);e.style.left=f.x-e.clientWidth/2+"px",e.style.top=f.y-e.clientHeight/2+"px"}}function createPaths(a,b,d,e){var f=Math.PI;let g=0;b.userData.intervals=[];for(let h=0;h<a.length;h++){let i=g,j=g+a[h],k=e-d,l=k-a[h]*e/3.5,m=new THREE.Spherical(k,getRotation(i),-f/2),n=new THREE.Spherical(l,(getRotation(i)+getRotation(j))/2,-f/2),o=new THREE.Spherical(k,getRotation(j),-f/2),p=new THREE.Spherical(k-.85*a[h],(getRotation(i)+getRotation(j))/2,-f/2),q=new THREE.Vector3().setFromSpherical(m),r=new THREE.Vector3().setFromSpherical(n),s=new THREE.Vector3().setFromSpherical(o),t=new THREE.Vector3().setFromSpherical(p),u=createCurve(new THREE.Vector2(q.x,q.y),new THREE.Vector2(r.x,r.y),new THREE.Vector2(s.x,s.y)),c=new THREE.Mesh;// This just honestly doesn't look as good:
// let intervalText;
// switch(intervals[i]){
//     case 1:
//         intervalText = 'm2'; break;
//     case 2:
//         intervalText = 'M2'; break;
//     case 3:
//         intervalText = 'm3'; break;
//     case 4:
//         intervalText = 'M3'; break;
//     case 5:
//         intervalText = 'P4'; break;
// }
c.position.copy(t),c.translateZ(carouselRadius),b.userData.intervals.push({mesh:c,interval:a[h]}),b.add(u),g+=a[h]}}function createPanels(a){// add a backgroup for the scale group
let b=4.5*a,c=new THREE.PlaneBufferGeometry(b,3*a),d=new THREE.MeshBasicMaterial({color:16777215,transparent:!0,opacity:0}),e=new THREE.Mesh(c,d);e.position.copy(camera.position.clone().multiplyScalar(.8)),e.updateMatrix();// add left and right panels for navigation
let f=e.clone(),g=e.clone();f.material=d.clone(),g.material=d.clone();// scale and position panels
let h=.1;f.scale.set(h,1,1),g.scale.set(h,1,1),f.translateX(b/2-b*h/2),g.translateX(-b/2+b*h/2),f.userData.direction="right",g.userData.direction="left",panels.push(f),panels.push(g),scene.add(f),scene.add(g);// create arrow icons
let i=new THREE.BufferGeometry,j=new Float32Array(9);j.set([0,-1,0,1,0,0,0,1,0]),i.addAttribute("position",new THREE.BufferAttribute(j,3)),i.computeVertexNormals();let k=new THREE.MeshBasicMaterial({color:16777215,transparent:!0,opacity:.5,side:THREE.DoubleSide}),l=new THREE.Mesh(i,k);l.position.copy(camera.position.clone().multiplyScalar(.8));let m=l.clone(),n=l.clone();m.translateX(b/2-.5-b*h/2),n.rotateY(Math.PI),n.translateX(b/2-.5-b*h/2),scene.add(m),scene.add(n)}function createCurve(a,b,c){let d=new THREE.QuadraticBezierCurve(a,b,c).getPoints(30),e=new THREE.BufferGeometry,f=[],g=new Float32Array(93);for(let e=0;e<=30;e++)f.push(d[e].x),f.push(d[e].y),f.push(0);g.set(f),e.addAttribute("position",new THREE.BufferAttribute(g,3));let h=new THREE.Line(e,new THREE.LineBasicMaterial({color:6710886,linewidth:1}));return h}function rotateCarousel(a){"left"==a?scaleshift=0>scaleshift-1?dataLength-1:scaleshift-1:"right"==a&&(scaleshift=scaleshift+1==dataLength?0:scaleshift+1);let b=new TWEEN.Tween(carouselRot);b.to({amount:2*(-scaleshift*Math.PI)/dataLength},300).easing(TWEEN.Easing.Cubic.In).onStart(()=>{flagUpdate=!0}).onComplete(()=>{// remove the tween from the array when finished to lessen
// the load on the render loop
flagUpdate=!1,tweens.delete(b)}).start(),tweens.add(b),updateLabels(masterGroup.children[scaleshift].userData.notes,!0),displayKeyboard()}function getRotation(a){// returns the radians associated with the nth segment of a 
// circle dived into twelve pieces
return 2*(-a*Math.PI)/12}function screenPosition(a,b){let c=a.position.clone();c.project(b);let d=new THREE.Vector3;return d.x=width/2*(1+c.x),d.y=height/2*(1-c.y),d.z=0,d}function playNote(a,b){var c=Math.PI;if(!flagUpdate){// prevent notes from playing during certain animations
// play the audio corresponding to the note
let d=a.userData.note,e=audioCtx.createBufferSource();e.buffer=audioBuffers[d+b],e.connect(audioCtx.destination),e.start(0);// 'spin' the geometries associated with the note
let f=a.userData.ring,g=.5<=Math.random()?1:-1,h=.5<=Math.random()?1:-1,i=new TWEEN.Tween(f.rotation);// register the note on the keyboard as well
i.to({x:2*(g*c),y:2*(h*c)},350).easing(TWEEN.Easing.Exponential.Out).onComplete(a=>{a.x=0,a.y=0,tweens.delete(i)}).start(),tweens.add(i),playKeyboardNote(d)}}function resize(){width=window.innerWidth,height=window.innerHeight,renderer.setSize(width,height),camera.aspect=width/height,camera.updateProjectionMatrix(),updateLabelPositions()}function onMouseMove(a){a.preventDefault(),mouse.x=2*(a.clientX/width)-1,mouse.y=2*-(a.clientY/height)+1}function onMouseDown(a){a.preventDefault(),null!=activePanel&&(rotateCarousel(activePanel.userData.direction),activePanel=null)}
initKeyboard();function initKeyboard(){keyboardGroup=new THREE.Group;let a=[0,2,4,5,7,9,11,12,14,16,17,19,21,23],b=.5,c=b/7;for(let d,e=0;14>e;e++){d=new THREE.Group,d.userData.index=a.shift();let f=new THREE.BoxBufferGeometry(b,3*b,.01),g=new THREE.BoxBufferGeometry(b-c,3*b-c,.01),h=new THREE.Mesh(f,new THREE.MeshBasicMaterial({color:6710886}));h.translateZ(-1e-7);let i=new THREE.Mesh(g,new THREE.MeshBasicMaterial({color:2041391}));d.add(i,h),d.translateX((b-c)*e),d.translateZ(carouselRadius),d.translateY(-6),keyboardGroup.add(d)}let d=.3,e=[1,3,6,8,10,13,15,18,20,22],f=d/7;for(let a=0;13>a;a++)// skip E-F and B-C intervals
if(2!=a&&6!=a&&9!=a){let g=new THREE.Group;g.userData.index=e.shift();let h=new THREE.BoxBufferGeometry(d,3*d,.01),i=new THREE.BoxBufferGeometry(d-f,3*d-f,.01),j=new THREE.Mesh(h,new THREE.MeshBasicMaterial({color:6710886}));j.translateZ(-1e-7);let k=new THREE.Mesh(i,new THREE.MeshBasicMaterial({color:2041391}));g.add(k,j),g.translateX(b/2-c+(b-c)*a),g.translateZ(carouselRadius+1e-5),g.translateY(-6+3*(b-d)/2),keyboardGroup.add(g)}keyboardGroup.children.sort((c,a)=>c.userData.index-a.userData.index),keyboardGroup.translateX(-6.5*(b-c)),scene.add(keyboardGroup)}function displayKeyboard(){let a=masterGroup.children[scaleshift].userData.notes,b=keyboardGroup.children,c=!0;for(let d=0;d<b.length;d++)d<pitchshift||d>=pitchshift+12||!1==a[d-pitchshift]?b[d].children[0].material.color=new THREE.Color(2041391):(b[d].children[0].material.color=c?new THREE.Color(16767024):new THREE.Color(57758),c=!1)}function playKeyboardNote(a){let b,c=keyboardGroup.children,d=c[a+pitchshift].children[0];b=0===a?new THREE.Color(16767024):new THREE.Color(57758),d.material.color=new THREE.Color(16777215);// tween back to original color
let e=new TWEEN.Tween(d.material.color);e.to({r:b.r,g:b.g,b:b.b},1800).easing(TWEEN.Easing.Exponential.Out).onComplete(()=>{tweens.delete(e)}).start(),tweens.add(e)}
if(WEBGL.isWebGLAvailable())document.getElementById("ready-btn").onclick=()=>{audioCtx.resume(),animate(),flagUpdate=!1,document.getElementById("overlay").style.display="none"};else{var warning=WEBGL.getWebGLErrorMessage();document.getElementById("overlay-content").appendChild(warning)}
